{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_PRODUCT_FAIL, ALL_PRODUCT_REQUEST, ALL_PRODUCT_SUCCESS, ADMIN_PRODUCT_REQUEST, ADMIN_PRODUCT_SUCCESS, ADMIN_PRODUCT_FAIL, NEW_PRODUCT_REQUEST, NEW_PRODUCT_SUCCESS, NEW_PRODUCT_FAIL, UPDATE_PRODUCT_REQUEST, UPDATE_PRODUCT_SUCCESS, UPDATE_PRODUCT_FAIL, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, NEW_REVIEW_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_FAIL, ALL_REVIEW_REQUEST, ALL_REVIEW_SUCCESS, ALL_REVIEW_FAIL, DELETE_REVIEW_REQUEST, DELETE_REVIEW_SUCCESS, DELETE_REVIEW_FAIL, CLEAR_ERRORS } from \"../constants/productConstants\";\nimport { BASE_URL } from \"../constants/globals\";\n\n// Get All Products\n\nexport const getProduct = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let currentPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let price = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 25000];\n  let category = arguments.length > 3 ? arguments[3] : undefined;\n  let ratings = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ALL_PRODUCT_REQUEST\n      });\n      let link = `${BASE_URL}/product?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&ratings[gte]=${ratings}`;\n      if (category) {\n        link = `http://localhost:4000/api/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&category=${category}&ratings[gte]=${ratings}`;\n      }\n      const {\n        data\n      } = await axios.get(link);\n      console.log(\"DAtaa:\", data);\n      dispatch({\n        type: ALL_PRODUCT_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ALL_PRODUCT_FAIL,\n        payload: error.response.data.message\n      });\n    }\n  };\n};\n// Clearing Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};\n\n// Get Products Details\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${BASE_URL}/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n// NEW REVIEW\nexport const newReview = (reviewData, token) => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:4000/api/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"names":["axios","ALL_PRODUCT_FAIL","ALL_PRODUCT_REQUEST","ALL_PRODUCT_SUCCESS","ADMIN_PRODUCT_REQUEST","ADMIN_PRODUCT_SUCCESS","ADMIN_PRODUCT_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_SUCCESS","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","ALL_REVIEW_REQUEST","ALL_REVIEW_SUCCESS","ALL_REVIEW_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","CLEAR_ERRORS","BASE_URL","getProduct","keyword","arguments","length","undefined","currentPage","price","category","ratings","dispatch","type","link","data","get","console","log","payload","error","response","message","clearErrors","getProductDetails","id","product","newReview","reviewData","token","config","headers","Accept","Authorization","put","success"],"sources":["C:/Users/prati/OneDrive/Desktop/Javascript/internship/ECOM_APP/frontend/src/actions/productAction.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n  ALL_PRODUCT_FAIL,\r\n  ALL_PRODUCT_REQUEST,\r\n  ALL_PRODUCT_SUCCESS,\r\n  ADMIN_PRODUCT_REQUEST,\r\n  ADMIN_PRODUCT_SUCCESS,\r\n  ADMIN_PRODUCT_FAIL,\r\n  NEW_PRODUCT_REQUEST,\r\n  NEW_PRODUCT_SUCCESS,\r\n  NEW_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_FAIL,\r\n  DELETE_PRODUCT_REQUEST,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  NEW_REVIEW_REQUEST,\r\n  NEW_REVIEW_SUCCESS,\r\n  NEW_REVIEW_FAIL,\r\n  ALL_REVIEW_REQUEST,\r\n  ALL_REVIEW_SUCCESS,\r\n  ALL_REVIEW_FAIL,\r\n  DELETE_REVIEW_REQUEST,\r\n  DELETE_REVIEW_SUCCESS,\r\n  DELETE_REVIEW_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/productConstants\";\r\nimport { BASE_URL } from \"../constants/globals\";\r\n\r\n// Get All Products\r\n\r\nexport const getProduct =\r\n  (keyword = \"\", currentPage=1,price = [0, 25000],category, ratings = 0) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: ALL_PRODUCT_REQUEST });\r\n      let link = `${BASE_URL}/product?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&ratings[gte]=${ratings}`\r\n      \r\n      if (category) {\r\n        link = `http://localhost:4000/api/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&category=${category}&ratings[gte]=${ratings}`;\r\n      }\r\n\r\n    const { data } = await axios.get(link);\r\nconsole.log(\"DAtaa:\", data)\r\n      dispatch({\r\n        type: ALL_PRODUCT_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ALL_PRODUCT_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n// Clearing Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n  };\r\n\r\n// Get Products Details\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`${BASE_URL}/product/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n// NEW REVIEW\r\nexport const newReview = (reviewData,token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NEW_REVIEW_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization:`${token}`,\r\n      \r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`http://localhost:4000/api/review`, reviewData, config);\r\n\r\n    dispatch({\r\n      type: NEW_REVIEW_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NEW_REVIEW_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}