{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\OneDrive\\\\Desktop\\\\Javascript\\\\internship\\\\ECOM_APP\\\\frontend\\\\src\\\\component\\\\User\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport \"./ResetPassword.css\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearErrors, login, resetPassword } from \"../../actions/userAction\";\nimport { useAlert } from \"react-alert\";\nimport MetaData from \"../layout/MetaData\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\n// import { useLocation,useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const history = useNavigate();\n  // const {token} = useParams()\n\n  const data = window.location.href.split('=');\n  const token = data[1];\n  console.log(token);\n  const {\n    error,\n    success,\n    loading\n  } = useSelector(state => state.forgotPassword);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const resetPasswordSubmit = e => {\n    e.preventDefault();\n    const myForm = new FormData();\n    myForm.set(\"password\", password);\n    myForm.set(\"confirmPassword\", confirmPassword);\n    dispatch(resetPassword(token, myForm));\n  };\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    if (success) {\n      alert.success(\"Password Updated Successfully\");\n      history(\"/login\");\n    }\n  }, [dispatch, error, alert, history, success]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MetaData, {\n        title: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resetPasswordContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resetPasswordBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"resetPasswordHeading\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"resetPasswordForm\",\n            onSubmit: resetPasswordSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(LockOpenIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"New Password\",\n                required: true,\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loginPassword\",\n              children: [/*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Confirm Password\",\n                required: true,\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Update\",\n              className: \"resetPasswordBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"ifuOu8ErHVjacjehEATSoC/FFJ0=\", false, function () {\n  return [useDispatch, useAlert, useNavigate, useSelector];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","Loader","useDispatch","useSelector","clearErrors","login","resetPassword","useAlert","MetaData","LockOpenIcon","LockIcon","Link","useNavigate","useParams","jsxDEV","_jsxDEV","ResetPassword","_s","dispatch","alert","history","data","window","location","href","split","token","console","log","error","success","loading","state","forgotPassword","password","setPassword","confirmPassword","setConfirmPassword","resetPasswordSubmit","e","preventDefault","myForm","FormData","set","children","fileName","_jsxFileName","lineNumber","columnNumber","title","className","onSubmit","type","placeholder","required","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/prati/OneDrive/Desktop/Javascript/internship/ECOM_APP/frontend/src/component/User/ResetPassword.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport \"./ResetPassword.css\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearErrors, login, resetPassword } from \"../../actions/userAction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\n// import { useLocation,useParams } from \"react-router-dom\";\r\nconst ResetPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const history = useNavigate()\r\n  // const {token} = useParams()\r\n\r\n  const data = window.location.href.split('=')\r\nconst token = data[1]\r\nconsole.log(token);\r\n  \r\n\r\n  const { error, success, loading } = useSelector(\r\n    (state) => state.forgotPassword\r\n  );\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const resetPasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const myForm = new FormData();\r\n\r\n    myForm.set(\"password\", password);\r\n    myForm.set(\"confirmPassword\", confirmPassword);\r\n\r\n    dispatch(resetPassword(token, myForm));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (success) {\r\n      alert.success(\"Password Updated Successfully\");\r\n\r\n      history(\"/login\");\r\n    }\r\n  }, [dispatch, error, alert, history, success]);\r\n  return (\r\n    <Fragment>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Fragment>\r\n        <MetaData title=\"Change Password\" />\r\n        <div className=\"resetPasswordContainer\">\r\n          <div className=\"resetPasswordBox\">\r\n            <h2 className=\"resetPasswordHeading\">Update Profile</h2>\r\n\r\n            <form\r\n              className=\"resetPasswordForm\"\r\n              onSubmit={resetPasswordSubmit}\r\n            >\r\n              <div>\r\n                <LockOpenIcon />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"New Password\"\r\n                  required\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"loginPassword\">\r\n                <LockIcon />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  required\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Update\"\r\n                className=\"resetPasswordBtn\"\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    )}\r\n  </Fragment>\r\n  )\r\n}\r\n\r\nexport default ResetPassword"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}